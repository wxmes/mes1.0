@RenderBody()
@{
    string action, controller;
    string area = action = controller = string.Empty;

    var routeData = ViewContext.RouteData.Values.Values.ToList();
    if (routeData.Any())
    {
        area = routeData[0].ToString();//区域
        controller = routeData[1].ToString();//控制器
        action = routeData[2].ToString();//方法
    }
}
@Html.HiddenFor(f => area)
@Html.HiddenFor(f => controller)
@Html.HiddenFor(f => action)
<environment names="Development">
    <script src="~/app/common/usercontrol/get-function-by-menuIdanduserId.js"></script>
</environment>
<environment names="Staging,Production">
    <script src="~/build/js/common/usercontrol/get-function-by-menuIdanduserId.min.js" asp-append-version="true"></script>
</environment>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@*是否冻结模版*@
<script type="text/html" id="templetFreeze">
    <small class="label label-{{ d.IsFreeze ? 'danger' : 'success' }}">{{ d.IsFreeze ? '冻结' : '未冻结' }}</small>
</script>

@*是否冻结模版*@
<script type="text/html" id="templetYesOrNo">
    <small class="label label-{{ d.Yes ? 'danger' : 'success' }}">{{ d.Yes ? '是' : '否' }}</small>
</script>

@*是否删除模版*@
<script type="text/html" id="templetDelete">
    <small class="label label-{{ d.IsDelete ? 'danger' : 'success' }}">{{ d.IsDelete ? '是' : '否' }}</small>
</script>

@*是性别模版*@
<script type="text/html" id="templetSex">
    <small class="label label-{{ d.Sex ? 'danger' : 'success' }}">{{ d.Sex ? '男' : '女' }}</small>
</script>

@*图标*@
<script type="text/html" id="templetIcon">
    <i class="{{d.Icon}}"></i>
</script>